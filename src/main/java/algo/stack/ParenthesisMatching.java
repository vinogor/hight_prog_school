package algo.stack;

// Напишите функцию, которая получает на вход строку, состоящую из открывающих и закрывающих скобок
// (например, "(()((())()))" или "(()()(()") и, используя только стек и оператор цикла, определите,
// сбалансированы ли скобки в этой строке. Сбалансированной считается последовательность, в которой
// каждой открывающей обязательно соответствует закрывающая, а каждой закрывающей -- открывающая скобки,
// то есть последовательности "())(" , "))((" или "((())" будут несбалансированы.

import java.util.*;

public class ParenthesisMatching {

    boolean check(String str) {

        char[] chars = str.toCharArray();
        LinkedList<Character> ll = new LinkedList<>();

        // точно не согласуется если символов нечётное кол-во
        if (str.length() % 2 == 1) {
            return false;
        }

        // перебираем
        for (char ch : chars) {
            if (ch == '(') {
                ll.push(ch);
            }

            // если закрывашка, то ищем есть ли открывашка в стеке
            if (ch == ')') {
                // если нет, то точно не согласовано
                if (ll.peek() == null) {
                    return false;
                }
                // если есть, то удаляем открывашку, т.к. пара нашлась
                ll.pop();
            }
        }

        // если в конце в стеке открывашек что-то осталось, то скобки несогласованы
        return ll.size() == 0;
    }
}
